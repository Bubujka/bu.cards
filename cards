#!/usr/bin/env ruby
require "pp"
require "yaml"
require "optparse"

require "stringio"


require "./lib/hash.rb"

require "./class.rb"
require "./cards_helper.rb"
require "./dir_mode.rb"
require "./file_mode.rb"
require "fileutils"
require "./lib/def.rb"
require "./lib/bind.rb"
require "./lib/flash.rb"
require "./lib/statistic.rb"

Dir.glob(File.dirname(__FILE__) + '/commands/*', &method(:require))

user_commands_file = File.expand_path "~/.bu_commands.rb"
require user_commands_file if File.exist? user_commands_file

require "rubygems"
require "backports"
require "colored"
require "ya2yaml"
require "natural_sort_kernel"

require "highline/system_extensions"
include HighLine::SystemExtensions

$options = {:config => "~/.cardsrc"}

OptionParser.new do |opts|
        opts.on( '-h', '--help', 'Display this screen' ) do
                puts opts
                exit
        end

        opts.on( '-c', '--config FILE', "Config file" ) do |f|
                $options[:config] = f 
        end

        opts.on( '-w', '--without-clear', "Disable clear function" ) do |f|
                def clear; end
        end
end.parse!


def home_dir
        if have_args? 
                ARGV[0].ex
        else
                rc("default_dir").ex
        end
end

def main 
        trap("INT") do
                exit
        end

        FileUtils.mkdir_p home_dir unless File.exists? home_dir
        goto_dir_mode home_dir
end

main
